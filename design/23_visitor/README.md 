# 访问者模式

访问者模式可以给一系列对象透明的添加功能，并且把相关代码封装到一个类中。

对象只要预留访问者接口Accept则后期为对象添加功能的时候就不需要改动对象。



微服务架构（Microservice Architecture）
概念：把一个大型的单个应用程序和服务拆分为数个甚至数十个的支持微服务，它可扩展单个组件而不是整个的应用程序堆栈，从而满足服务等级协议。
定义：围绕业务领域组件来创建应用，这些应用可独立地进行开发、管理和迭代。在分散的组件中使用云架构和平台式部署、管理和服务功能，使产品交付变得更加简单。
本质：用一些功能比较明确、业务比较精练的服务去解决更大、更实际的问题。
架构介绍：
展示层：运维后台、监控后台、PC设备、移动、终端、外部系统、后台管理等
接入层: Nginx+keepalived负载均衡
网关层：API GateWay，可采用APISIX、kong实现鉴权、限流等、使用Rest API、消息等方式进行赋能
服务层：采用开发框架SpringBoot、RPC框架Dubbo进行开发、采用nacos进行服务注册、服务发现、统一配置等、Canal数据同步
基础服务层：Spring boot Admin监控、Sentinel熔断限流、skywalking调用链追踪、ELK日志中心、DBMS监控报警等
基础设施层：数据库集群、Redis集群、分布式对象存储、PasS平台能力、MQ消息集群、微服务框架能力、大数据服务、ElasticSearch集群
运维：Maven、Git、Jenkins、自动化测试、Docker、Kubernates




